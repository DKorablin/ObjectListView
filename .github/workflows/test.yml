name: Test, Build

on:
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

env:
  SolutionName: ${{github.event.repository.name}}
  DotNetVersion: 8.0.x

jobs:
  test_net_windows:
    name: Testing
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{env.DotNetVersion}}
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore Packages
      run: msbuild ${{env.SolutionName}}.sln /t:Restore

    - name: Build Solution
      run: msbuild ${{env.SolutionName}}.sln /p:Configuration=Debug

    - name: Run Tests
      run: |
        $vsPath = (vswhere -latest -property installationPath)
        $vstestPath = Join-Path $vsPath "Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe"
        $testAssemblies = Get-ChildItem -Recuse -Path "*\bin\Debug\*Tests.dll" | ForEach-Object { $_.FullName }
        if ($testAssemblies) {
          & $vstestPath $testAssemblies
        } else {
          Write-Host "No test assemblies were found."
          exit 1
        }
      shell: pwsh